/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.awt.Graphics;
import java.awt.Image;
import java.awt.image.ImageObserver;
import java.awt.image.ImageProducer;
import java.util.ArrayList;

import client.Client;
import client.ServerData;
import helpclasses.CommEnum;
import helpclasses.CommMessage;
import helpclasses.Farm;
import helpclasses.Message;
import helpclasses.Owner;
import helpclasses.Sheep;

import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.event.ChangeEvent;
import java.awt.image.BufferedImage;
import javax.imageio.ImageIO;

import map.GenerateMap;

import java.io.IOException;

/**
 *
 * @author Kyrre
 * @author Kenneth
 */
public class Hub extends javax.swing.JFrame {

	/**
	 * Creates new form Hub
	 */
	public Hub() {
		initComponents();
		//initJPanels();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabMain = new javax.swing.JTabbedPane();
        panelHome = new javax.swing.JPanel();
        tabHome = new javax.swing.JTabbedPane();
        messages = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        messageList = new javax.swing.JList();
        map = new javax.swing.JPanel();
        mapPanel = new MapPanel();
        panelFilters = new javax.swing.JPanel();
        filtersLabel = new javax.swing.JLabel();
        filtersFarmComboBox = new javax.swing.JComboBox();
        filtersFarmLabel = new javax.swing.JLabel();
        filtersSheepLabel = new javax.swing.JLabel();
        filtersSheepComboBox = new javax.swing.JComboBox();
        filtersAlarmCheckBox = new javax.swing.JCheckBox();
        filtersAlarmLabel = new javax.swing.JLabel();
        filtersFilterButton = new javax.swing.JButton();
        filtersFilterUpdateJButton = new javax.swing.JButton();
        tabOptions = new javax.swing.JTabbedPane();
        addSheep = new javax.swing.JPanel();
        addSheepTitleLabel = new javax.swing.JLabel();
        addSheepName = new javax.swing.JTextField();
        addSheepNameLabel = new javax.swing.JLabel();
        addSheepBirthYearLabel = new javax.swing.JLabel();
        addSheepFarm = new javax.swing.JComboBox();
        addSheepFarmLabel = new javax.swing.JLabel();
        addSheepBirthYear = new javax.swing.JComboBox();
        addSheepNameOptionalLabel = new javax.swing.JLabel();
        addSheepAdd = new javax.swing.JButton();
        removeSheep = new javax.swing.JPanel();
        removeSheepTitleLabel = new javax.swing.JLabel();
        removeSheepID = new javax.swing.JTextField();
        removeSheepIDLabel = new javax.swing.JLabel();
        removeSheepRemove = new javax.swing.JButton();
        addFarm = new javax.swing.JPanel();
        addFarmTitleLabel = new javax.swing.JLabel();
        addFarmName = new javax.swing.JTextField();
        addFarmNameLabel = new javax.swing.JLabel();
        addFarmAdd = new javax.swing.JButton();
        removeFarm = new javax.swing.JPanel();
        removeFarmTitleLabel = new javax.swing.JLabel();
        removeFarmNameLabel = new javax.swing.JLabel();
        removeFarmAdd = new javax.swing.JButton();
        removeFarmComboFarm = new javax.swing.JComboBox();
        editContactInformation = new javax.swing.JPanel();
        editContactInformationTitleLabel = new javax.swing.JLabel();
        editEmailAddressLabel = new javax.swing.JLabel();
        editTelephoneNumberLabel = new javax.swing.JLabel();
        editFriendTelephoneNumberLabel = new javax.swing.JLabel();
        editFriendEmailAddressLabel = new javax.swing.JLabel();
        editTelephoneNumber = new javax.swing.JTextField();
        editEmailAddress = new javax.swing.JTextField();
        editFriendTelephoneNumber = new javax.swing.JTextField();
        editFriendEmailAddress = new javax.swing.JTextField();
        updateContactInformation = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        tabMain.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tabMainStateChanged(evt);
            }
        });

        panelHome.setName("panelHome"); // NOI18N

        tabHome.setPreferredSize(new java.awt.Dimension(800, 600));
        tabHome.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tabHomeStateChanged(evt);
            }
        });

        messageList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(messageList);

        javax.swing.GroupLayout messagesLayout = new javax.swing.GroupLayout(messages);
        messages.setLayout(messagesLayout);
        messagesLayout.setHorizontalGroup(
            messagesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 578, Short.MAX_VALUE)
        );
        messagesLayout.setVerticalGroup(
            messagesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 533, Short.MAX_VALUE)
        );

        tabHome.addTab("Messages", messages);

//        javax.swing.GroupLayout mapPanelLayout = new javax.swing.GroupLayout(mapPanel);
//        mapPanel.setLayout(mapPanelLayout);
//        mapPanelLayout.setHorizontalGroup(
//            mapPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGap(0, 558, Short.MAX_VALUE)
//        );
//        mapPanelLayout.setVerticalGroup(
//            mapPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGap(0, 511, Short.MAX_VALUE)
//        );

        javax.swing.GroupLayout mapLayout = new javax.swing.GroupLayout(map);
        map.setLayout(mapLayout);
        mapLayout.setHorizontalGroup(
            mapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mapLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mapPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        mapLayout.setVerticalGroup(
            mapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mapLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mapPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabHome.addTab("Map", map);

        filtersLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        filtersLabel.setText("Filters:");

        filtersFarmComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All Farms" }));
        filtersFarmComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filtersFarmComboBoxActionPerformed(evt);
            }
        });

        filtersFarmLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        filtersFarmLabel.setText("Farm:");

        filtersSheepLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        filtersSheepLabel.setText("Sheep:");

        filtersSheepComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All Sheep" }));
        filtersSheepComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filtersSheepComboBoxActionPerformed(evt);
            }
        });

        filtersAlarmCheckBox.setText("Only alarm messages.");
        filtersAlarmCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filtersAlarmCheckBoxActionPerformed(evt);
            }
        });

        filtersAlarmLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        filtersAlarmLabel.setText("Alarm:");

        filtersFilterButton.setText("Filter");
        filtersFilterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filtersFilterButtonActionPerformed(evt);
            }
        });

        filtersFilterUpdateJButton.setText("Update");
        filtersFilterUpdateJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filtersFilterUpdateJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelFiltersLayout = new javax.swing.GroupLayout(panelFilters);
        panelFilters.setLayout(panelFiltersLayout);
        panelFiltersLayout.setHorizontalGroup(
            panelFiltersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFiltersLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelFiltersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(filtersFarmComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(filtersSheepComboBox, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelFiltersLayout.createSequentialGroup()
                        .addGroup(panelFiltersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(filtersLabel)
                            .addComponent(filtersFarmLabel)
                            .addComponent(filtersSheepLabel)
                            .addComponent(filtersAlarmLabel)
                            .addComponent(filtersAlarmCheckBox))
                        .addGap(0, 33, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelFiltersLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(panelFiltersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(filtersFilterButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(filtersFilterUpdateJButton, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        panelFiltersLayout.setVerticalGroup(
            panelFiltersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFiltersLayout.createSequentialGroup()
                .addComponent(filtersLabel)
                .addGap(46, 46, 46)
                .addComponent(filtersFarmLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(filtersFarmComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(filtersSheepLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(filtersSheepComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(filtersAlarmLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(filtersAlarmCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(filtersFilterButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 213, Short.MAX_VALUE)
                .addComponent(filtersFilterUpdateJButton)
                .addContainerGap())
        );

        javax.swing.GroupLayout panelHomeLayout = new javax.swing.GroupLayout(panelHome);
        panelHome.setLayout(panelHomeLayout);
        panelHomeLayout.setHorizontalGroup(
            panelHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelHomeLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(tabHome, javax.swing.GroupLayout.DEFAULT_SIZE, 583, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(panelFilters, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        panelHomeLayout.setVerticalGroup(
            panelHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelHomeLayout.createSequentialGroup()
                .addGroup(panelHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tabHome, javax.swing.GroupLayout.DEFAULT_SIZE, 561, Short.MAX_VALUE)
                    .addGroup(panelHomeLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(panelFilters, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        tabMain.addTab("Home", panelHome);
        panelHome.getAccessibleContext().setAccessibleName("");

        tabOptions.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tabOptionsStateChanged(evt);
            }
        });

        addSheep.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                addSheepMousePressed(evt);
            }
        });

        addSheepTitleLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        addSheepTitleLabel.setText("Add Sheep:");

        addSheepName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        addSheepName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSheepNameActionPerformed(evt);
            }
        });

        addSheepNameLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        addSheepNameLabel.setText("Name:");

        addSheepBirthYearLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        addSheepBirthYearLabel.setText("Birth year:");

        addSheepFarm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSheepFarmActionPerformed(evt);
            }
        });

        addSheepFarmLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        addSheepFarmLabel.setText("Farm:");

        addSheepBirthYear.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030", "2031", "2032", "2033", "2034", "2035", "2036", "2037", "2038", "2039", "2040", "2041", "2042", "2043", "2044", "2045", "2046", "2047", "2048", "2049", "2050" }));

        addSheepNameOptionalLabel.setFont(new java.awt.Font("Tahoma", 2, 10)); // NOI18N
        addSheepNameOptionalLabel.setText("(Optional)");

        addSheepAdd.setText("Add Sheep");
        addSheepAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSheepAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addSheepLayout = new javax.swing.GroupLayout(addSheep);
        addSheep.setLayout(addSheepLayout);
        addSheepLayout.setHorizontalGroup(
            addSheepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addSheepLayout.createSequentialGroup()
                .addGap(200, 200, 200)
                .addGroup(addSheepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addSheepTitleLabel)
                    .addGroup(addSheepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(addSheepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addSheepBirthYearLabel)
                            .addComponent(addSheepFarmLabel)
                            .addGroup(addSheepLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(addSheepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(addSheepBirthYear, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(addSheepFarm, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(addSheepAdd, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE))))
                        .addGroup(addSheepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addSheepLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(addSheepName, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addSheepLayout.createSequentialGroup()
                                .addComponent(addSheepNameLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(addSheepNameOptionalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(380, Short.MAX_VALUE))
        );
        addSheepLayout.setVerticalGroup(
            addSheepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addSheepLayout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addComponent(addSheepTitleLabel)
                .addGap(51, 51, 51)
                .addGroup(addSheepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addSheepNameLabel)
                    .addComponent(addSheepNameOptionalLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addSheepName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(addSheepBirthYearLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addSheepBirthYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addComponent(addSheepFarmLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addSheepFarm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(addSheepAdd)
                .addContainerGap(171, Short.MAX_VALUE))
        );

        tabOptions.addTab("Add Sheep", addSheep);

        removeSheepTitleLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        removeSheepTitleLabel.setText("Remove Sheep:");

        removeSheepID.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        removeSheepID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeSheepIDActionPerformed(evt);
            }
        });

        removeSheepIDLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        removeSheepIDLabel.setText("Sheep ID:");

        removeSheepRemove.setText("Remove Sheep");
        removeSheepRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeSheepRemoveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout removeSheepLayout = new javax.swing.GroupLayout(removeSheep);
        removeSheep.setLayout(removeSheepLayout);
        removeSheepLayout.setHorizontalGroup(
            removeSheepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(removeSheepLayout.createSequentialGroup()
                .addGap(200, 200, 200)
                .addGroup(removeSheepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, removeSheepLayout.createSequentialGroup()
                        .addComponent(removeSheepIDLabel)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(removeSheepLayout.createSequentialGroup()
                        .addGroup(removeSheepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(removeSheepTitleLabel)
                            .addGroup(removeSheepLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(removeSheepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(removeSheepRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(removeSheepID, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 380, Short.MAX_VALUE))))
        );
        removeSheepLayout.setVerticalGroup(
            removeSheepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(removeSheepLayout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addComponent(removeSheepTitleLabel)
                .addGap(50, 50, 50)
                .addComponent(removeSheepIDLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(removeSheepID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(removeSheepRemove)
                .addContainerGap(300, Short.MAX_VALUE))
        );

        tabOptions.addTab("Remove Sheep", removeSheep);

        addFarmTitleLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        addFarmTitleLabel.setText("Add Farm:");

        addFarmName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        addFarmNameLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        addFarmNameLabel.setText("Farm Name:");

        addFarmAdd.setText("Add Farm");
        addFarmAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFarmAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addFarmLayout = new javax.swing.GroupLayout(addFarm);
        addFarm.setLayout(addFarmLayout);
        addFarmLayout.setHorizontalGroup(
            addFarmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addFarmLayout.createSequentialGroup()
                .addGap(200, 200, 200)
                .addGroup(addFarmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addFarmNameLabel)
                    .addComponent(addFarmTitleLabel)
                    .addGroup(addFarmLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(addFarmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addFarmAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addFarmName, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(380, Short.MAX_VALUE))
        );
        addFarmLayout.setVerticalGroup(
            addFarmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addFarmLayout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addComponent(addFarmTitleLabel)
                .addGap(52, 52, 52)
                .addComponent(addFarmNameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addFarmName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(addFarmAdd)
                .addContainerGap(298, Short.MAX_VALUE))
        );

        tabOptions.addTab("Add Farm", addFarm);

        removeFarmTitleLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        removeFarmTitleLabel.setText("Remove Farm:");

        removeFarmNameLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        removeFarmNameLabel.setText("Farm ID:");

        removeFarmAdd.setText("Remove Farm");
        removeFarmAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeFarmAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout removeFarmLayout = new javax.swing.GroupLayout(removeFarm);
        removeFarm.setLayout(removeFarmLayout);
        removeFarmLayout.setHorizontalGroup(
            removeFarmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(removeFarmLayout.createSequentialGroup()
                .addGap(200, 200, 200)
                .addGroup(removeFarmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, removeFarmLayout.createSequentialGroup()
                        .addComponent(removeFarmNameLabel)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(removeFarmLayout.createSequentialGroup()
                        .addGroup(removeFarmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(removeFarmTitleLabel)
                            .addGroup(removeFarmLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(removeFarmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(removeFarmAdd, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                    .addComponent(removeFarmComboFarm, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(0, 380, Short.MAX_VALUE))))
        );
        removeFarmLayout.setVerticalGroup(
            removeFarmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(removeFarmLayout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addComponent(removeFarmTitleLabel)
                .addGap(50, 50, 50)
                .addComponent(removeFarmNameLabel)
                .addGap(14, 14, 14)
                .addComponent(removeFarmComboFarm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(removeFarmAdd)
                .addContainerGap(300, Short.MAX_VALUE))
        );

        tabOptions.addTab("Remove Farm", removeFarm);

        editContactInformationTitleLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        editContactInformationTitleLabel.setText("Edit Contact Information:");

        editEmailAddressLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        editEmailAddressLabel.setText("Email address:");

        editTelephoneNumberLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        editTelephoneNumberLabel.setText("Telephone number:");

        editFriendTelephoneNumberLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        editFriendTelephoneNumberLabel.setText("Friend's telephone number:");

        editFriendEmailAddressLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        editFriendEmailAddressLabel.setText("Friend's email address:");

        editTelephoneNumber.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        editTelephoneNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editTelephoneNumberActionPerformed(evt);
            }
        });

        editEmailAddress.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        editFriendTelephoneNumber.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        editFriendEmailAddress.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        updateContactInformation.setText("Update Contact Information");
        updateContactInformation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateContactInformationActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout editContactInformationLayout = new javax.swing.GroupLayout(editContactInformation);
        editContactInformation.setLayout(editContactInformationLayout);
        editContactInformationLayout.setHorizontalGroup(
            editContactInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editContactInformationLayout.createSequentialGroup()
                .addGap(200, 200, 200)
                .addGroup(editContactInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(editEmailAddressLabel)
                    .addComponent(editTelephoneNumberLabel)
                    .addComponent(editFriendEmailAddressLabel)
                    .addComponent(editFriendTelephoneNumberLabel)
                    .addComponent(editContactInformationTitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(editContactInformationLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(editContactInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(editFriendEmailAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(editFriendTelephoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(editEmailAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(editTelephoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(updateContactInformation, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(374, Short.MAX_VALUE))
        );
        editContactInformationLayout.setVerticalGroup(
            editContactInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editContactInformationLayout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addComponent(editContactInformationTitleLabel)
                .addGap(50, 50, 50)
                .addComponent(editTelephoneNumberLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(editTelephoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(editEmailAddressLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(editEmailAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(editFriendTelephoneNumberLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(editFriendTelephoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(editFriendEmailAddressLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(editFriendEmailAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(updateContactInformation)
                .addContainerGap(93, Short.MAX_VALUE))
        );

        tabOptions.addTab("Edit Contact Information", editContactInformation);

        tabMain.addTab("Options", tabOptions);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabMain)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabMain)
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-816)/2, (screenSize.height-638)/2, 816, 638);
    }// </editor-fold>//GEN-END:initComponents

	private void addSheepNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSheepNameActionPerformed
		// TODO add your handling code here:
	}//GEN-LAST:event_addSheepNameActionPerformed

	private void addSheepFarmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSheepFarmActionPerformed
		// TODO add your handling code here:
	}//GEN-LAST:event_addSheepFarmActionPerformed

	private void removeSheepIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeSheepIDActionPerformed
		// TODO add your handling code here:
	}//GEN-LAST:event_removeSheepIDActionPerformed

	private void addFarmAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFarmAddActionPerformed
		String farmName = addFarmName.getText();
    		if (farmName.length() >= 3 && farmName != "You have no farms") {
			addFarmName.setText(null);
			ArrayList<Farm> metadata = new ArrayList<Farm>();
			metadata.add(new Farm(-1, farmName, ServerData.owner.getOwnerId()));
			Client.sockCli.sendMessage(new CommMessage<Farm>(CommEnum.ADDFARM,metadata));
			Client.sockCli.sendMessage(new CommMessage<String>(CommEnum.GETFARMS, null));
			
			initRemoveFarm();
			initAddSheep();
		}else{
			JOptionPane.showMessageDialog(this, "Farm name must be at least 3 characters", "Invalid name", JOptionPane.ERROR_MESSAGE);
		}

	}//GEN-LAST:event_addFarmAddActionPerformed

	private void removeFarmAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeFarmAddActionPerformed
		String farmToRemove = (String) this.removeFarmComboFarm.getSelectedItem();
		if (farmToRemove == "You have no farms")
			return;
		
		System.out.print(farmToRemove);
		ArrayList<Farm> metadata = new ArrayList<Farm>();
		metadata.add(ServerData.getFarmByNameAndRemove(farmToRemove));
		Client.sockCli.sendMessage(new CommMessage<Farm>(CommEnum.REMOVEFARM, metadata));
		initRemoveFarm();
		initAddSheep();
		refreshMessages();
	}//GEN-LAST:event_removeFarmAddActionPerformed

	private void addSheepAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSheepAddActionPerformed
		String name = addSheepName.getText();
		int birthYear = Integer.parseInt((String) addSheepBirthYear.getSelectedItem());
		String farmName = (String) addSheepFarm.getSelectedItem();
		addSheepName.setText(null);
		ArrayList<Sheep> sheep = new ArrayList<Sheep>();
		sheep.add(new Sheep(-1, name, birthYear, ServerData.getFarmByName(farmName).getFarmId(), ServerData.owner.getOwnerId()));
		Client.sockCli.sendMessage(new CommMessage<Sheep>(CommEnum.ADDSHEEP, sheep));
		refreshMessages();
	}//GEN-LAST:event_addSheepAddActionPerformed

	private void removeSheepRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeSheepRemoveActionPerformed
		int id = Integer.parseInt(removeSheepID.getText());
		removeSheepID.setText(null);
		ArrayList<Sheep> sheep = new ArrayList<Sheep>();
		sheep.add(new Sheep(id, "", -1, -1, -1));
		Client.sockCli.sendMessage(new CommMessage<Sheep>(CommEnum.REMOVESHEEP, sheep));
		refreshMessages();

	}//GEN-LAST:event_removeSheepRemoveActionPerformed

	private void addSheepMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addSheepMousePressed
		//System.out.println("hurra");
	}//GEN-LAST:event_addSheepMousePressed

	private void tabOptionsStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tabOptionsStateChanged
		// TODO add your handling code here:
		//initAddSheep();
		//initRemoveFarm();
		// Uteldet...
	}//GEN-LAST:event_tabOptionsStateChanged

	private void filtersAlarmCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filtersAlarmCheckBoxActionPerformed
		onlyAlarm = !onlyAlarm;
	}//GEN-LAST:event_filtersAlarmCheckBoxActionPerformed

	private void filtersFilterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filtersFilterButtonActionPerformed
		String farm = (String) filtersFarmComboBox.getSelectedItem();
                String sheep = (String) filtersSheepComboBox.getSelectedItem();
		ArrayList<ArrayList<Message>> tmp = ServerData.filterMessages(onlyAlarm, farm, sheep, farm.equals("All farms"), sheep.equals("All sheep"));
		ArrayList<Message> tmpmgs = new ArrayList<Message>();
		
		for (ArrayList<Message> l : tmp) {
			tmpmgs.add(l.get(0));
		}
		messageList.setListData(tmpmgs.toArray());
		GenerateMap.UpdateMap(tmp);
		mapPanel.reload();
		
		

	}//GEN-LAST:event_filtersFilterButtonActionPerformed

	private void tabMainStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tabMainStateChanged
		// TODO add your handling code here:
		//refreshMessages();
	}//GEN-LAST:event_tabMainStateChanged

	private void tabHomeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tabHomeStateChanged
		// TODO add your handling code here:
		//refreshMessages();
	}//GEN-LAST:event_tabHomeStateChanged
	
	
	/**
	 * Here we handle all the things related to the user updating his contact
	 *  information.
	 *  
	 * @author Kenneth 
	 * @param evt
	 */
	private void updateContactInformationActionPerformed(
			java.awt.event.ActionEvent evt) {
		boolean isValuesValid		 = false;
		String telephoneNumber 		 = editTelephoneNumber.getText();
		String emailAddress	   		 = editEmailAddress.getText();
		String friendTelephoneNumber = editFriendTelephoneNumber.getText();
		String friendEmailAddress	 = editFriendEmailAddress.getText();
		
		
		isValuesValid = isContactInformationValid(telephoneNumber,
				emailAddress, friendTelephoneNumber, friendEmailAddress);
		
		
		if(isValuesValid) {
			//Uncertain about using an ArrayList when i'm only send 1 owner
			ArrayList<Owner> owner = new ArrayList<Owner>();
			owner.add(new Owner(-1,
					ServerData.owner.getUsername(),
					ServerData.owner.getPassword(),
					"", "",
					Integer.parseInt(telephoneNumber), emailAddress,
					Integer.parseInt(friendTelephoneNumber), friendEmailAddress));

		
			Client.sockCli.sendMessage(new CommMessage<Owner>(
					CommEnum.UPDATECONTACTINFORMATION, owner));
		}

		// TODO add your handling code here:
	}//GEN-LAST:event_updateContactInformationActionPerformed

    private void filtersFarmComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filtersFarmComboBoxActionPerformed
        filtersSheepComboBox.setModel(new DefaultComboBoxModel
                (ServerData.getSheepNamesByFarmName((String)filtersFarmComboBox.getSelectedItem())));
    }//GEN-LAST:event_filtersFarmComboBoxActionPerformed

    private void filtersSheepComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filtersSheepComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_filtersSheepComboBoxActionPerformed

    private void editTelephoneNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editTelephoneNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_editTelephoneNumberActionPerformed

    private void filtersFilterUpdateJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filtersFilterUpdateJButtonActionPerformed
        refreshMessages();
    }//GEN-LAST:event_filtersFilterUpdateJButtonActionPerformed
	
	/**
	 * This function checks to see if the given telephone numbers and email
	 * addresses is valid. Error message is given if a non-valid value is
	 *  found.
	 * 
	 * @author Kenneth 
	 * @param telephoneNumber1 - Telephone number for the owner
	 * @param emailAddress1 - Email address for the owner
	 * @param telephoneNumber2 - Telephone number for a friend
	 * @param emailAddress2 - Email address for a friend
	 * @return true if all values are valid, false otherwise
	 */
	private boolean isContactInformationValid(String telephoneNumber1,
			String emailAddress1, String telephoneNumber2,
			String emailAddress2) {
		
		
		if(telephoneNumber1.isEmpty()) {
            JOptionPane.showMessageDialog(null,
                    "Field for Telephone Number is empty!",
                    "Not valid contact information",
                    JOptionPane.ERROR_MESSAGE);
            return false;
        }
        else if(emailAddress1.isEmpty()) {
            JOptionPane.showMessageDialog(null,
                    "Field for Email Address is empty!",
                    "Not valid contact information",
                    JOptionPane.ERROR_MESSAGE);
            return false;
        }	
		if(!isTelephoneNumber(telephoneNumber1)) {
			JOptionPane.showMessageDialog(null, telephoneNumber1 +
					" is not a valid telephoneNumber", 
					"Not valid contact information",
					JOptionPane.ERROR_MESSAGE);
			return false;
		}
		if(!isEmailAddress(emailAddress1)) {
			JOptionPane.showMessageDialog(null, emailAddress1 +
					" is not a valid email address", 
					"Not valid contact information",
					JOptionPane.ERROR_MESSAGE);
			return false;
		}
		if(!telephoneNumber2.isEmpty()) {
			if(!isTelephoneNumber(telephoneNumber2)) {
				JOptionPane.showMessageDialog(null, telephoneNumber2 +
						" is not a valid telephoneNumber", 
						"Not valid contact information",
						JOptionPane.ERROR_MESSAGE);
				return false;
			}
		}
		if(!emailAddress2.isEmpty()) {
			if(!isEmailAddress(emailAddress2)) {
				JOptionPane.showMessageDialog(null, emailAddress2 +
						" is not a valid email address", 
						"Not valid contact information",
						JOptionPane.ERROR_MESSAGE);
				return false;
			}
		}
		
		return true;
	}
	
	/**
	 * Function checks to see if parameter is a telephone number.
	 * 
	 * @author Kenneth
	 * @param telephoneNumber - The telephone number we want to check for
	 *  validity
	 * @return true if value contains 8 integers, false otherwise
	 */
	private boolean isTelephoneNumber(String telephoneNumber) {		
		try {
    		int number = Integer.parseInt(telephoneNumber);
    		
    		
    		//If telephone number is a number but less than 10 000 000 or
    		// greater than 99 999 999 we indicate that it is not valid.
    		if(number < 10000000 || number > 99999999) {
    			return false;
    		}
    	}
    	catch(Exception exception) {
    		return false;
    	}
		
		return true;
	}
	
	/**
	 * Function checks to see if an email address is valid.
	 * 
	 * @author Kenneth
	 * @param emailAddress - The email address we want to check for validity
	 * @return true if valid email address, false otherwise
    */
	private boolean isEmailAddress(String emailAddress) {
		if(!emailAddress.matches("^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)" +
        		"*@[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$")) {
        	return false;
        }
		
		return true;
	}
	
	
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel addFarm;
    private javax.swing.JButton addFarmAdd;
    private javax.swing.JTextField addFarmName;
    private javax.swing.JLabel addFarmNameLabel;
    private javax.swing.JLabel addFarmTitleLabel;
    private javax.swing.JPanel addSheep;
    private javax.swing.JButton addSheepAdd;
    private javax.swing.JComboBox addSheepBirthYear;
    private javax.swing.JLabel addSheepBirthYearLabel;
    private javax.swing.JComboBox addSheepFarm;
    private javax.swing.JLabel addSheepFarmLabel;
    private javax.swing.JTextField addSheepName;
    private javax.swing.JLabel addSheepNameLabel;
    private javax.swing.JLabel addSheepNameOptionalLabel;
    private javax.swing.JLabel addSheepTitleLabel;
    private javax.swing.JPanel editContactInformation;
    private javax.swing.JLabel editContactInformationTitleLabel;
    private javax.swing.JTextField editEmailAddress;
    private javax.swing.JLabel editEmailAddressLabel;
    private javax.swing.JTextField editFriendEmailAddress;
    private javax.swing.JLabel editFriendEmailAddressLabel;
    private javax.swing.JTextField editFriendTelephoneNumber;
    private javax.swing.JLabel editFriendTelephoneNumberLabel;
    private javax.swing.JTextField editTelephoneNumber;
    private javax.swing.JLabel editTelephoneNumberLabel;
    private javax.swing.JCheckBox filtersAlarmCheckBox;
    private javax.swing.JLabel filtersAlarmLabel;
    private javax.swing.JComboBox filtersFarmComboBox;
    private javax.swing.JLabel filtersFarmLabel;
    private javax.swing.JButton filtersFilterButton;
    private javax.swing.JButton filtersFilterUpdateJButton;
    private javax.swing.JLabel filtersLabel;
    private javax.swing.JComboBox filtersSheepComboBox;
    private javax.swing.JLabel filtersSheepLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel map;
    private MapPanel mapPanel;
    private javax.swing.JList messageList;
    private javax.swing.JPanel messages;
    private javax.swing.JPanel panelFilters;
    private javax.swing.JPanel panelHome;
    private javax.swing.JPanel removeFarm;
    private javax.swing.JButton removeFarmAdd;
    private javax.swing.JComboBox removeFarmComboFarm;
    private javax.swing.JLabel removeFarmNameLabel;
    private javax.swing.JLabel removeFarmTitleLabel;
    private javax.swing.JPanel removeSheep;
    private javax.swing.JTextField removeSheepID;
    private javax.swing.JLabel removeSheepIDLabel;
    private javax.swing.JButton removeSheepRemove;
    private javax.swing.JLabel removeSheepTitleLabel;
    private javax.swing.JTabbedPane tabHome;
    private javax.swing.JTabbedPane tabMain;
    private javax.swing.JTabbedPane tabOptions;
    private javax.swing.JButton updateContactInformation;
    // End of variables declaration//GEN-END:variables

	private boolean onlyAlarm = false;
	private String version = "alpha 0.1";

	public void initComp(){
		Client.sockCli.sendMessage(new CommMessage<Farm>(CommEnum.GETFARMS, null));
		Client.sockCli.sendMessage(new CommMessage<Sheep>(CommEnum.GETSHEEP, null));
		initAddSheep();
		initContactInformation();
		initRemoveFarm();
		refreshMessages();
		setIcon();
		this.setTitle("SheepStalker " + version );

	}

	private void setIcon(){
		BufferedImage image = null;
		try {
			image = ImageIO.read(
					this.getClass().getResource("/res/briller_hatt.png"));
		} catch (IOException e) {
			e.printStackTrace();
		}
		this.setIconImage(image);
	}

	private void initAddSheep(){
		addSheepFarm.setModel(new DefaultComboBoxModel(ServerData.getFarmNames()));
	}

	/**
	 * Function initializes contact information for the user. The contact
	 * information can be seen in the tab Options->Edit Contact Information
	 */
	private void initContactInformation() {
		editTelephoneNumber.setText(String.valueOf(ServerData.owner.getPrimaryTLF()));
		editEmailAddress.setText(ServerData.owner.getPrimaryMail());
		editFriendTelephoneNumber.setText(String.valueOf(ServerData.owner.getSecondaryTLF()));
		editFriendEmailAddress.setText(ServerData.owner.getSecondaryMail());

	}

	private void initRemoveFarm() {
		removeFarmComboFarm.setModel(new DefaultComboBoxModel(ServerData.getFarmNames()));
	}
	private void refreshMessages()
	{
		// send request

		if (ServerData.isLoggedIn)
		{
			Client.sockCli.sendMessage(new CommMessage<String>(CommEnum.GETMESSAGES, null));
			
			ArrayList<Message> tmpmgs = new ArrayList<Message>();
			
			for (ArrayList<Message> l : ServerData.messages) {
				tmpmgs.add(l.get(0));
			}
			messageList.setListData(tmpmgs.toArray());
			messageList.setVisible(true);
			
			GenerateMap.UpdateMap(ServerData.messages);
			mapPanel.reload();

			filtersFarmComboBox.setModel(new DefaultComboBoxModel(ServerData.getFarmNamesPlusAllFarms()));
			filtersSheepComboBox.setModel(new DefaultComboBoxModel(ServerData.getSheepNamesByFarmName((String) filtersFarmComboBox.getSelectedItem())));
		}
	}
	

}
